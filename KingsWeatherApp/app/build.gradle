apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: "org.sonarqube"

android {
    compileSdkVersion 34
    defaultConfig {
        applicationId "com.example.KingsWeatherApp"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        buildConfigField "String", "BASE_URL", "\"" + getBaseUrl() + "\""
//        buildConfigField "String", "APP_ID", "\"" + getAppId() + "\""
    }
    buildTypes {
        debug {
            buildConfigField("String", "API_ENDPOINT", "\"https://dev.example.com/api\"")
        }
        release {
            buildConfigField("String", "API_ENDPOINT", "\"https://prod.example.com/api\"")
        }
    }

    compileOptions {
        sourceCompatibility "1.8"
        targetCompatibility JavaVersion.VERSION_1_8
    }
    viewBinding.enabled = true
    namespace 'com.example.kingsweatherapp'
    buildToolsVersion '27.0.3'
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleDependency
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    //Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"

    // material design
    implementation 'com.google.android.material:material:1.12.0'

    // dagger2
    def daggerVersion = "2.41"
    api "com.google.dagger:dagger:$daggerVersion"
    api "com.google.dagger:dagger-android:$daggerVersion"
    api "com.google.dagger:dagger-android-support:$daggerVersion" // if you use the support libraries
    kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$daggerVersion"

    // network call related libraries
    def retrofitVersion = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion" // REST API calling library
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion" // JSON parsing library
    implementation('com.github.ihsanbal:LoggingInterceptor:3.0.0') { // HTTP pretty log printing library
        exclude group: 'org.json', module: 'json'
    }

    // glide image loading library
    def glideVersion = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"
}

def getBaseUrl() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String baseUrl = properties.getProperty("base_url")
    if (baseUrl == null)
        throw new GradleException("Add 'base_url' field at local.properties file")

    return baseUrl
}

def getAppId() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())

    String appId = properties.getProperty("app_id")
    if (appId == null)
        throw new GradleException("Add 'app_id' field at local.properties file")

    return appId
}